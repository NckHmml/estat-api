name: Deploy to production

on:
  workflow_dispatch:

jobs:
  build-go:
    name: Build Go Lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambda
    env:
      GOOS: linux
      GOARCH: arm64
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: go-
      - name: "Build"
        run: |
          go install
          go build -tags lambda.norpc -o bootstrap main.go
          zip lambda.zip bootstrap
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda.zip
          path: ./lambda/lambda.zip

  deploy-terraform:
    name: Terraform deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    needs: build-go
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: lambda.zip
          path: ./lambda
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
      - name: "Deploy"
        run: |
          terraform init
          terraform apply -auto-approve -var-file=production.tfvars -var="rds_password=${{ secrets.RDS_PASSWORD }}"
